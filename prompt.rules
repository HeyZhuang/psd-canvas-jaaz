    def _build_prompt(self, layer_info_text):
        """构建Gemini prompt"""
        prompt = f"""# PSD 图层自适应缩放任务

## 任务目标
将 PSD 文件从原始尺寸自适应转换为目标尺寸，保持设计的视觉平衡和专业性。所有前景图层都要保留，文字产品一定不能重叠!!!

## 输入信息
- **原始尺寸**: {self.original_width}x{self.original_height} (宽x高)
- **目标尺寸**: {self.target_width}x{self.target_height} (宽x高)

## 图层数据
```
{layer_info_text}
```

## 调整要求

### 1. 基本原则
- 对所有的图层能进行两个操作分别是移动和resize，resize 必须是等比例 resize，不能修改原图层的比例。
- 经过操作之后的图层，最小值不能小于 0，最大值不能超过目标尺寸的范围。！！！
- 保持图层的视觉层次关系
- 确保文字清晰可读，不被裁切
- 产品/主体元素完整展示!!!
- 避免图层间的重叠(特别是文字与产品)!!!,这一点非常重要，可以通过调整文字的大小和产品大小，以及位置来避免重叠，文字的大小一定要进行适度的修改，来匹配修改后的布局。
- 保持设计的视觉平衡和美!!!
- 不要修改原有图层的visible属性!!

### 2. 调整策略
针对不同类型的图层采用不同策略:

**背景图层** (type: "pixel" 或全画布的 shape):
- 根据目标尺寸，对高度或者宽度裁切至目标尺寸
- 或采用居中裁切，确保视觉焦点在画布内

**装饰性图形** (type: "shape"):
- 如果超出新画布范围，考虑等比缩小或重新定位

**文字图层** (type: "text"):
- 优先保证完整性，不被裁切
- 根据目标尺寸和原始尺寸的大小，等比例调整大小，并且调整位置

**其他图层** :
- 根据设计美学整体调整，等比例调整图层的大小和位置

### 3. 输出要求
请为每个图层提供新的坐标信息，格式如下:
```json
[
  {{
    "id": 图层ID(数字),
    "name": "图层名称",
    "original_coords": {{"left": X, "top": Y, "right": X, "bottom": Y}},
    "type": "图层类型",
    "level": 图层层级(数字),
    "new_coords": {{"left": X, "top": Y, "right": X, "bottom": Y}},
    "adjustment_notes": "说明此调整的原因以及如何确保视觉效果",
    "precautions": "需要人工检查的潜在问题"
  }}
]
```

**重要**: 请直接输出JSON数组，不要添加markdown代码块标记(如```json)，确保输出是有效的JSON格式。
"""
        return prompt